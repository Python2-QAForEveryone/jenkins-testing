# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Jenkins Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - run: |
        mkdir -p saved_screenshots

    - uses: actions/cache@v2
      with:
       path: |
         /home/runner/work/jenkins-testing/jenkins-testing/selenium-grid
       key: ${{ runner.os }}-jenkins_backup-${{ hashFiles('**/jenkins_backup.tar') }}
       restore-keys: |
            ${{ runner.os }}-jenkins_backup-

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -Ur requirements.txt

    - name: Docker login
      run: echo ${{ secrets.DOCKER_PAS }} | docker login --username ${{ secrets.DOCKER_USER }} --password-stdin

    - name: Public IP
      id: ip
      uses: haythem/public-ip@v1.2


    - name: Docker start
      run: docker-compose -f ./selenium-grid/docker-compose.yml up -d
      env:
        HOST_IP: ${{ steps.ip.outputs.ipv4 }}

    - name: Wait Grid is UP
      run: ./selenium-grid/wait-for-grid.sh

    - name: Load Jenkins data
      run: |
       if [ ! -f /home/runner/work/jenkins-testing/jenkins-testing/selenium-grid/jenkins_backup.tar ]; then
             curl http://buildemojis.com/jenkins_backup.tar -o /home/runner/work/jenkins-testing/jenkins-testing/selenium-grid/jenkins_backup.tar
       fi

    - name: Insatll Jenkins data
      run: |
        docker run --rm --volumes-from jenkins2 -v /home/runner/work/jenkins-testing/jenkins-testing/selenium-grid:/backup ubuntu bash -c "cd /var && tar xf /backup/jenkins_backup.tar --strip 1"
        docker restart jenkins2
        sleep 120


    - name: Test with pytest
      run: |
        pytest -vs

    - uses: actions/upload-artifact@v2
      with:
        name: Saved_screenshots
        path: saved_screenshots

    - name: Docker stop
      run: docker-compose -f ./selenium-grid/docker-compose.yml down
